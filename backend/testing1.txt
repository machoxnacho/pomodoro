* Service: 
    * changed network mode from bridge to awsvpc
    * host port changed from 0 to 5000


* making a new target group
* target type: ip address because i am using awsvpc
* name: my-tg
* protocol HTTP 5000
* use /health
* change ALB listener to my-tg
* update service 
* use the lastest definition revision 
* under networking, choose VPC and ur associated subnets
* make new ecs-sg: name ecs-sg
* add inbound custom TCP , 5000, alb-sg, click create
* go back and add inbound ALL TCP for source of the ecs-sg
* go back to service and add the sg of the ecs-sg that youve just created 
* create. then go back and add load balancer
    * self explanitory
* Delete the instance you had so that asg can deploy a new one

aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 900546069136.dkr.ecr.us-east-1.amazonaws.com


docker buildx build \
  --platform linux/amd64 \
  -t 900546069136.dkr.ecr.us-east-1.amazonaws.com/smiski-backend:latest \
  --push .



# Step 1: Build frontend
FROM node:18-alpine AS frontend

WORKDIR /app
COPY ../src ./src
WORKDIR /app/src
RUN npm install && npm run build

# Step 2: Backend build
FROM node:18-alpine

WORKDIR /app

# Copy backend
COPY . .

# Copy frontend build
COPY --from=frontend /app/src/build ../src/build

# Install backend dependencies
RUN npm install

EXPOSE 5000

CMD ["node", "server.js"]

